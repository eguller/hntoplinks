---
- name: install nginx
  ansible.builtin.yum:
    name:
      - nginx-{{ nginx_version }}
    state: present

- name: Set httpd_can_network_connect flag on and keep it persistent across reboots
  ansible.posix.seboolean:
    name: httpd_can_network_connect
    state: yes
    persistent: yes

- name: "Create .well-known/acme-challenge directory"
  ansible.builtin.file:
    path: "{{ nginx_public_html_path }}/.well-known/acme-challenge"
    state: directory
    owner: root
    group: root
    mode: u=rwx,g=rx,o=rx

- name: upload nginx configuration file
  ansible.builtin.template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
  register: nginx_config

- name: upload hntoplinks nginx configuration file
  ansible.builtin.template:
    src: hntoplinks.conf.j2
    dest: /etc/nginx/conf.d/hntoplinks.conf
  register: hntoplinks_nginx_config

- name: upload certbot configuration
  ansible.builtin.template:
    src: "{{ domain_name }}.cli.ini.j2"
    dest: /etc/letsencrypt/{{ domain_name }}.cli.ini

- name: Create Certbot renewal hooks directory
  ansible.builtin.file:
    path: /etc/letsencrypt/renewal-hooks/post
    state: directory
    mode: '0755'

- name: Create Nginx reload hook for Certbot
  ansible.builtin.copy:
    dest: /etc/letsencrypt/renewal-hooks/post/nginx-reload.sh
    mode: '0755'
    content: |
      #!/bin/bash
      systemctl reload nginx

- name: reload nginx configuration
  ansible.builtin.systemd:
    name: nginx
    enabled: yes
    state: reloaded
  when: nginx_config.changed or hntoplinks_nginx_config.changed

- name: enable service nginx
  ansible.builtin.systemd:
    name: nginx
    enabled: yes
    state: started
